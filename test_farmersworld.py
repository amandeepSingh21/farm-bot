# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary
from selenium.webdriver.firefox.firefox_profile import FirefoxProfile

from selenium.webdriver.support import expected_conditions as EC

class TestFarmersworld():
  def setup_method(self, method):
    binary = FirefoxBinary('/usr/bin/firefox')
    profile = FirefoxProfile('/home/user/.mozilla/firefox/z6z2ad51.default')
    self.driver = webdriver.Firefox(firefox_binary=binary, firefox_profile=profile)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_farmersworld(self):
    self.driver.get("https://play.farmersworld.io/")
    self.driver.set_window_size(1265, 739)
    WebDriverWait(self.driver, 15).until(expected_conditions.visibility_of_element_located((By.ID, "RPC-Endpoint")))
    dropdown = self.driver.find_element(By.ID, "RPC-Endpoint")
    dropdown.find_element(By.XPATH, "//option[. = 'https://wax.eosphere.io']").click()
    element = self.driver.find_element(By.ID, "RPC-Endpoint")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "RPC-Endpoint")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "RPC-Endpoint")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".login-button").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".login-modal-button:nth-child(2) > .login-button--text").click()
    self.vars["win6289"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win6289"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".tooltip:nth-child(1) .plain-button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".short").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel__img--item:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".tooltip:nth-child(1) .plain-button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".short").click()

def main():
    TestFarmersworld()
    pass

if __name__ == '__main__':
    main()
  
